######################################################################
# LuckyChat 配置文件
# 此份文件为Spigot端的LuckyChat插件配置文件，
# 该插件用于实现Minecraft服务端内消息与QQ群消息互相广播，
# 即当玩家在Minecraft游戏中发送消息时，bot会向群内发送该消息，反之亦然。
# 注：bot即为QQ机器人
######################################################################
# 以下是对该插件运行机制的解释，建议在修改配置文件前先了解（也可以不了解）：
# 本次插件可以实现“会话互相独立，会话内多群多服互通”功能。
#
# 首先，bot程序和MC服务端的关系为服务端和客户端的关系，它们可以说是一套配套的插件。
# bot程序启动后加载bot端插件，开始监听某一端口（默认54100）。
#
# bot端插件以会话（Session）为单位，每个会话保存了会话名、会话号和群列表，
# 这三项是由bot端决定的（详细情况请了解bot端插件，此处仅对使用进行解释），
# 如果群列表中的某个群中出现了消息，该条消息会被bot同步转发到群列表的其他群中，
# 即“群群互通”。
#
# 当MC端（即本插件）携带指定的会话号连接bot端的连接地址时，bot端会将该连接
# “添加”到会话中，此时在同一个会话中的群列表和连接的MC端消息互通，即“群服互通”。
# 这里需要注意的是，bot端无法预测连入的MC端的来源，仅仅只是做了有连接时将连接
# 交给会话处理的工作，因此，下方的配置文件为需要提交给bot端的一些信息。
#
# 当有多个MC端携带相同的会话号连接同一个bot端时，该会话就维护了两个MC端连接，
# 此时两个MC端的消息也是互通的，即实现“服服互通”。
#
# 以下列举多个例子以辅助理解：
# 例子1：
#     会话1 群列表：群123，群456，群789
#     会话1 MC连接列表：无
#     此时若群123有人发送消息，则群456和群789都能收到该消息
# 例子2：
#     会话1 群列表：群123，群456
#     会话1 MC连接列表：MC服1 MC服2
#     此时若群123有人发送消息，则群456、MC服1、MC服2都能收到该消息
#     若MC服1有人发送消息，则群123、群456、MC服2都能收到消息
# 例子3：
#     会话1 群列表：群123
#     会话1 MC连接列表：MC服1
#     会话2 群列表：群456
#     会话2 MC连接列表：MC服2
#     此时群123和MC服1消息互通，群456和MC服2消息互通，而群123和群456、MC服2消息不互通
#     即：会话是独立的，不同的会话互不影响
#
# 综上，可以通俗解释为：同一会话中的群和MC端连接消息互通，不同会话互不影响。
######################################################################
# 由于bot端无法预测连入的MC端，且为了使得消息格式自定义程度更高，
# 我们将消息格式的定义权交给了MC端，而以下的format里的内容则为消息的格式，
# 定义的格式是一个字符串，并用占位符代替实际显示内容，当实际内容到来时，
# 这些占位符会被替换成实际的内容。
######################################################################
# 颜色代码表
# 这些代码可以用于发送往服务器内的所有消息，代码的后方内容均为该代码定义的格式
# §0 黑
# §1 深蓝
# §2 深绿
# §3 深青
# §4 深红
# §5 深紫
# §6 金
# §7 灰
# §8 深灰
# §9 蓝
# §a 绿
# §b 青
# §c 红
# §d 浅紫
# §e 黄
# §f 白

# §k 混淆
# §l 粗体
# §m 删除线
# §n 下划线
# §o 斜体
# §r 恢复默认
######################################################################


# bot中定义了一些与bot端插件相关的配置
bot:
  # 连接bot端的地址和端口
  # host: "localhost"
  host: "localhost"
  # port: 54100
  port: 54100
  #
  # 连接失败尝试重连时间
  # 当连接失败时经过几秒后重新尝试连接
  # retryTimes: 5
  retryTimes: 5
  #
  # 会话号
  # 若提供的会话号不存在，则拒绝连接，并要求使用/mcchat reload指令重新开启连接尝试
  # sessionId: 12345
  sessionId: 12345


# 服务器名字
# 在下方的消息格式定义中可以使用占位符%serverName%来获得服务器名字
# 注意：多个同名服务器接入同一个会话有可能产生不可预测的问题（并非严重问题）
# serverName: "MinecraftServer"
serverName: "MinecraftServer"


# 消息格式
# 各项注释请不要删除，方便随时查阅
format:
  ######################################################################
  # 该条消息格式是来自于QQ群消息的消息格式，将被发送到MC游戏中
  # 以下为所有占位符，在实际运行过程中这些占位符会被实际数据替代：
  # %sessionName%    会话备注（由bot端决定）
  # %groupId%    群号
  # %groupName%    群名
  # %groupNickname%    群昵称（由bot端决定，相当于给群起的别名）
  # %senderId%    发送者qq
  # %senderNickname%    发送者昵称
  # %senderGroupNickname%    发送者的群昵称（若无，则此占位符会被自动填充发送者昵称）
  # %message%    消息内容
  # fromBot: "[%groupNickname%] <%senderGroupNickname%> %message%"
  fromBot: "[%groupNickname%] <%senderGroupNickname%> %message%"
  ######################################################################

  ######################################################################
  # 以下的消息格式均为发送到qq群消息的消息格式，将被发送到QQ群和其它在同一个会话的MC端中
  # 接下来的每一项内容的占位符未必相同
  #
  # 该消息为当玩家进入游戏时发送
  # %playerName%    加入游戏玩家的ID
  # join: "[%serverName%] %playerName% 加入了游戏"
  join: "[%serverName%] %playerName% 加入了游戏"
  #
  # 该消息为当玩家离开游戏时发送
  # %playerName%    离开游戏玩家的ID
  # quit: "[%serverName%] %playerName% 离开了游戏"
  quit: "[%serverName%] %playerName% 离开了游戏"
  #
  # 该消息为当玩家发送消息时发送
  # %playerName%    发送消息的玩家ID
  # %message%    消息内容
  # message: "[%serverName%] <%playerName%> %message%"
  message: "[%serverName%] <%playerName%> %message%"
  #
  # 该消息为当玩家死亡时发送
  # %playerName%    死亡的玩家ID
  # %deathMessage%    死亡信息（此信息已经包含玩家ID，相当于游戏里聊天框显示的死亡信息）
  # death: "[%serverName%] %deathMessage%"
  death: "[%serverName%] %deathMessage%"
  #
  # 该消息为当玩家被踢出时发送
  # %playerName%    被踢的玩家ID
  # %kickReason%    踢出原因
  # kick: "[%serverName%] %playerName% 被踢了，因为 %kickReason%"
  kick: "[%serverName%] %playerName% 被踢了，因为 %kickReason%"
  ######################################################################


# 与在线玩家列表相关的内容
onlinePlayers:
  # 用户在同会话群内发送以下消息中的任意一条时，返回在线人数列表
  command:
    - "/list"
    - "/在线"
    - "list"
    - "在线"
    - "#list"
    - "#在线"

  # 获取在线玩家列表返回内容
  response:
    # 返回的在线人数列表的格式
    # %players%    玩家列表
    # %count%    人数（数字）
    # format: "[%serverName%] 当前%count%名玩家在线\n%players%"
    format: "[%serverName%] 当前%count%名玩家在线\n%players%"
    # 玩家列表的分隔符（最后一名玩家后面不补充分隔符）
    # separator: "\n"
    separator: "\n"


# 群内发送MC端指令相关
# 在群内发送指令可以直接操作服务器
# rcon：MC服务端提供的一种指令协议，通过该协议，op可以不用经过控制台就能发送指令
# rcon指定了连接端口和连接密码，请妥善保存
# 此插件所用的rcon均为本地直接连接，如需要防止外人连接，请设置rcon端口的防火墙
rconCommand:
  # 总开关
  # 若为false则不启用群内发送MC指令
  # 若为true则启用群内发送MC指令
  # 开启前请务必确认server.properties里的enable-rcon=true
  # 并将rcon.port的内容填入以下port属性中
  # rcon.password的内容填入以下password中
  # 否则将无法发送MC指令
  # 至于如何设定op的QQ号，请在游戏内执行/mcchat指令
  # enabled: false
  enabled: false

  # rcon端口
  # port: 25575
  port: 25575

  # rcon密码
  # password: "abcdefg"
  password: "abcdefg"

  # op指令格式前缀
  # 当op在群内发送的消息中包含以下前缀时，前缀后面的内容为指令内容
  # prefix: "[%serverName%]#"
  prefix: "[%serverName%]#"

  # 用户指令格式前缀
  # 当用户在群内发送的消息中包含以下前缀时，前缀后面的内容为用户指令内容
  # userPrefix: "[%serverName%]/"
  userPrefix: "[%serverName%]/"

  # 绑定用户mcid与qq的指令前缀
  # 当用户在群内发送的消息中包含以下前缀时，前缀后面的内容为绑定的mc中的id
  # userBindPrefix: "[%serverName%]^"
  userBindPrefix: "[%serverName%]^"

  # 指令执行结果格式
  # 该内容将被发送到群里
  # %result%    执行结果
  # resultFormat: "[%serverName%] 执行结果：\n%result%"
  resultFormat: "[%serverName%] 执行结果：\n%result%"


# 公告相关
# 当bot方向该MC端发送公告时，将以以下格式发送到游戏中
# %announcement%    发送公告内容
# %senderNickname%    发送者昵称
# %senderId%    发送者QQ
# announcementFormat: "§d---------------公告---------------\n§6%announcement%\n发布者：%senderNickname%（QQ %senderId%）"
announcementFormat: "§d---------------公告---------------\n§6%announcement%\n发布者：%senderNickname%（QQ %senderId%）"

#####################以下内容为非必要修改选项#####################

# 插件的提示消息（如意外断开连接，通知提醒等）
# 此消息可以按照自己需求修改
# 此消息一般没有必要修改
info:
  #
  # 插件被加载时发送此消息
  # onEnable: "§d[LuckyChat] §6插件被加载"
  onEnable: "§d[LuckyChat] §6插件被加载"
  #
  # 插件被卸载时发送此消息
  # onDisable: "§d[LuckyChat] §6插件被卸载"
  onDisable: "§d[LuckyChat] §6插件被卸载"
  #
  # 请求被bot端拒绝时时发送此消息
  # 此后将不会再发送连接请求，并要求输入/mcchat reload重新加载配置文件
  # %errorMessage%    bot端返回的错误信息
  # onRequestError: "§d[LuckyChat] §c连接失败，错误信息：%errorMessage%\n§d[LuckyChat] §c请修改配置文件后执行/mcchat reload指令"
  onRequestError: "§d[LuckyChat] §c连接失败，错误信息：%errorMessage%\n§d[LuckyChat] §c请修改配置文件后执行/mcchat reload指令"
  #
  ##############################################################
  # 以下这些消息中可以使用的占位符：
  # %sessionId%    会话号
  # %sessionName%    会话名
  # %pingInterval%    心跳包间隔（数字，单位秒）
  # %remoteAddress% 远程地址（实际为bot端收到的连接地址，即这台主机的ip地址）
  #
  # 会话连接成功时发送此消息
  # onConnected: "§d[LuckyChat] §6已连接到会话 §a%sessionName%"
  onConnected: "§d[LuckyChat] §6已连接到会话 §a%sessionName%"
  #
  # 未收到心跳包时发送此消息，然后断开连接
  # %waitTime%    等待时间（数字，单位秒）
  # onPingFail: "§d[LuckyChat] §c已经%waitTime%秒未接收到心跳包，关闭连接"
  onPingFail: "§d[LuckyChat] §c已经%waitTime%秒未接收到心跳包，关闭连接"
  #
  # 当bot端要求断开连接时发送此消息，接着断开连接
  # %reason% bot端要求断开连接的原因
  # onBotRequestClose: "§d[LuckyChat] §cbot要求断开连接，原因：%reason%"
  onBotRequestClose: "§d[LuckyChat] §cbot要求断开连接，原因：%reason%"
  #
  # 断开连接时发送此消息，接着重新尝试连接
  # onConnectionDisconnect: "§d[LuckyChat] §c连接已断开，稍后重新尝试连接"
  onConnectionDisconnect: "§d[LuckyChat] §c连接已断开，稍后重新尝试连接"
  ##############################################################
